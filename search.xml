<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[acm C语言鸡兔同笼问题]]></title>
      <url>https://git.coding.net/kevinfaith/hexo-blog.git/undefined/acm%E7%BC%96%E7%A8%8B%E9%A2%98%20(2)20170303/</url>
      <content type="html"><![CDATA[<p>描述</p>
<blockquote>
<p>浙江工商大学校园里绿树成荫，环境非常舒适，因此也引来一批动物朋友来此居住。<br>童心未泯的redraiment就经常带些碎面包什么的去广场喂鸽子和兔子，并和它们玩耍。一点也不像大学生，还是一副老不正经的样子，呵呵。<br>随着鸽子和兔子数目的增多，redraiment带的那点食物已经不够它们瓜分了。为了能让自己的好朋友吃的饱饱的，redraiment决定统计一下有多少只鸽子和有多少只兔子，以便带来足够的食物。一、二、三、四、五…他开始数了。<br>现在，他已经知道有这些鸽子和兔子一共有n个头和m只脚。请你帮他写个程序计算一下一共有多少只鸽子和兔子。</p>
</blockquote>
<a id="more"></a>
<p>输入</p>
<blockquote>
<p>输入包括多组数据。<br>每行包括2个数据：n、m(代表上面题目中提到的意思1≤n, m≤230)。<br>n、m都是整数。 </p>
</blockquote>
<p>输出</p>
<blockquote>
<p>每组数据的输出都只有一行，分别是鸽子的数量和兔子数量。<br>如果输入的测试数据不能求得结果，那肯定是redraiment这个马大哈数错了，就输出”Error”提示他。</p>
</blockquote>
<p>样例输入</p>
<blockquote>
<p>94 35<br>13</p>
</blockquote>
<p>样例输出</p>
<blockquote>
<p>12 23<br>error</p>
</blockquote>
<p>上代码</p>
<pre><code>#include &lt;stdio.h&gt;
int main()
{
    int m,n,x,y; 
    scanf(&quot;%d,%d&quot;,&amp;m,&amp;n);
    if (n&gt;=1,m&lt;=2^30 )
    {
        if ( m % 2 == 0 )
        {
            x=2*n-m/2;
            y=m/2-n;
            printf(&quot;%d,%d\n&quot;,x,y);
        }
        else
        {
            printf(&quot;error\n&quot;);
        }
    }
    else
    {
        printf(&quot;error\n&quot;);
    }
    return 0;
}
</code></pre><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=5276807&auto=1&height=66"></iframe>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[acm C语言求两个数最大值]]></title>
      <url>https://git.coding.net/kevinfaith/hexo-blog.git/undefined/acm%E7%BC%96%E7%A8%8B%E9%A2%9820170217/</url>
      <content type="html"><![CDATA[<p>C语言实验题――两个数比较<br>描述</p>
<blockquote>
<p>求2个数中较大者。</p>
</blockquote>
<p>输入</p>
<blockquote>
<p>第一行为测试的数据组数N，接下来的N行分别是两个待比较的整数</p>
</blockquote>
<p>输出</p>
<blockquote>
<p>输出N行，每一行的值为每组数中较大的整数</p>
</blockquote>
<p>样例输入</p>
<blockquote>
<p>2<br>1   2<br>15  10</p>
</blockquote>
<p>样例输出</p>
<blockquote>
<p>2<br>15</p>
</blockquote>
<a id="more"></a>
<blockquote>
<p>#include <stdio.h><br>int a,b;<br>int main(int argc, char const *argv[])<br>{<br>    scanf(“%d,%d”,&amp;a,&amp;b);<br>    if (a&gt;b)<br>    {<br>        printf(“%d\n”, a);<br>    }<br>    else<br>    {<br>        printf(“%d\n”, b );<br>    }<br>    return 0;<br>}</stdio.h></p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33875750&auto=1&height=66"></iframe>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux下实现计划任务的方法]]></title>
      <url>https://git.coding.net/kevinfaith/hexo-blog.git/undefined/%E4%B8%80%E5%A4%A9%E4%B8%80%E6%9D%A1linux%E5%91%BD%E4%BB%A4(2)20170216/</url>
      <content type="html"><![CDATA[<p>linux下实行计划任务的方法</p>
<ol>
<li>执行一次性任务可以用at命令，比如你要设置一个明天上午10点输出hello world：<blockquote>
<p>at 10.00 tomorrow<br>at &gt;etho“hello world”</p>
</blockquote>
</li>
</ol>
<a id="more"></a>
<p>ctrl+D结束输入</p>
<blockquote>
<p>job 1 at 2017-2-16 10:00</p>
</blockquote>
<p>这样就ok了</p>
<p>2.如果要设置周期性任务，可以用crontab命令来完成，“crontab -e”编辑cron表，“crontab -l”查看当前cron表，“crontab -r“删除当前cron表，”crontab -u 用户名”以某用户的身份控制cron表。</p>
<p>crontab -e 编辑cron表，这时会打开vi，按“i”进入编辑模式，<br>依此输入 “分钟  小时 日 月 周 [用户名]  命令”<br>如：我想在2017.2.16，4点输出i love you</p>
<blockquote>
<p>*  4  16  2  *  etho“i love you”</p>
</blockquote>
<p>cron时间符号</p>
<blockquote>
<p>*  代表任意时间<br>，代表分隔出不连续点，如2.5.7<br>-  代表连续点。如2-4， 表示2.3.4<br>  */  表示每隔单位时间</p>
</blockquote>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33875750&auto=1&height=66"></iframe>

]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux下修改文件所属用户组和文件权限的方法]]></title>
      <url>https://git.coding.net/kevinfaith/hexo-blog.git/undefined/%E4%B8%80%E5%A4%A9%E4%B8%80%E6%9D%A1linux%E5%91%BD%E4%BB%A4(1)20170215/</url>
      <content type="html"><![CDATA[<p>linux下修改文件所属用户组和修改文件权限的方法</p>
<ol>
<li>修改文件所属用户组的命令是chown，这个命令的格式是</li>
</ol>
<blockquote>
<p>chown    [-R]    username  filename<br>chown    [-R]    username:group filename</p>
</blockquote>
<a id="more"></a>
<p>第一个是修改文件所属的的用户，第二个修改文件所属用户组,-R属性为可选属性，意思是递归修改，也就是把文件下所有文件，包括子目录一起修改，大多数情况下-R 属性都是这个意思。</p>
<p>2.修改文件权限的命令是chmod，这个命令的格式是有两种设置方法有数字法与文字法i，数字法</p>
<p>就是用数字来代替rwx，r、w、x分别对应4、2、1，这个命令的格式为</p>
<blockquote>
<p>chmod  [-R]  xyz  filename</p>
</blockquote>
<p>其中x代表owner权限，y代表group权限，z代表others权限，以上三种身份的值就是rwx的和，r代表读，w写 ，x运行，如果没有相应的权限则值为0。<br>如想设置.bashrc文件的权限为owner为rwx，group权限为无，others权限为无，则命令如下</p>
<blockquote>
<p>chmod 700 .bashrc</p>
</blockquote>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33875750&auto=1&height=66"></iframe>




]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[基于Hexo和coding搭建博客]]></title>
      <url>https://git.coding.net/kevinfaith/hexo-blog.git/undefined/hello-world20170206/</url>
      <content type="html"><![CDATA[<p>在windows下（linux下步骤也差不多）用coding和hexo搭建自己的博客<br>需要的工具：node，git ，以及在coding下建立一个项目<br><a id="more"></a></p>
<ol>
<li><p>首先去git<a href="https://git-scm.com/downloads/" target="_blank" rel="external">官网</a>下载git，而linux的git安装则比较方便，在终端输入：</p>
<blockquote>
<p>sudo add-apt-repository ppa:git-core/ppa<br>sudo apt-get update<br>sudo apt-get install git</p>
</blockquote>
</li>
<li><p>安装node：进入node<a href="https://nodejs.org/en/" target="_blank" rel="external">官网</a>，下载最新版本node，安装</p>
</li>
<li><p>安装hexo：打开node.js ，输入</p>
<blockquote>
<p>npm install -g hexo</p>
</blockquote>
</li>
<li><p>初始化hexo：在本地目录建一个文件夹，名字随意，比如我d盘下建一个文件夹blog，右键，选择gitbash</p>
<blockquote>
<p>hexo init  //初始化目录<br>npm install  //安装依赖包</p>
</blockquote>
</li>
<li><p>生成静态页面：</p>
<blockquote>
<p>hexo g  //生成静态网页<br>hexo s  //本地调试</p>
</blockquote>
</li>
</ol>
<p>然后在浏览器下输入localhost：4000可以看到生成的页面</p>
<ol>
<li>在coding下新建一个项目，登录coding！<a href="https://coding.net" target="_blank" rel="external">官网</a>,创建一个新的项目</li>
<li>建立ssh连接：打开gitbash，输入<blockquote>
<p>ssh-keygen -t rsa -C “username@example.com” //( 注册的邮箱)</p>
</blockquote>
</li>
</ol>
<p>连按三个回车，然后在C:\Users\Administrator目录下会生成一个.ssh文件夹，打开其中的id_rsa.pub，复制全部内容，到coding个人设置，在左下角找到SSH公钥，添加公钥，在公钥内容上粘贴id_rsa.pub的全部内容，公钥名称可不填，添加好以后测试链接 在gitbash下</p>
<blockquote>
<p>ssh -T git@git.coding.net</p>
</blockquote>
<p>遇到询问是否信任服务器公钥，输入 yes 即可,如显示hello，XXXXXXX，则表示成功，</p>
<ol>
<li>上传静态网页：在coding界面复制git地址，如git@git.coding.net:XXX（此处是你的coding用户名）/XXXX（coding项目名称）.git 然后打开本地hexo初始化目录（blog），在目录下找到_config.yml文件，打开此文件在最下面找到deploy属性<blockquote>
<p>deploy:<br> type: git<br> repo: git@git.coding.net:XXXXX/XXXXX.git<br> branch: master</p>
</blockquote>
</li>
</ol>
<p>改成如上形式，repo后面是你的git地址，记得所有的冒号后面有个空格，branch是你的分支，gitbash</p>
<blockquote>
<p>hexo d //上传</p>
</blockquote>
<p>等待片刻你的静态网页便上传成功，</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33875750&auto=1&height=66"></iframe>


]]></content>
    </entry>
    
  
  
</search>
